<?php/**  * alltosun.com 监控函数文件 monitor.php  * ============================================================================  * 版权所有 (C) 2009-2013 北京互动阳光科技有限公司，并保留所有权利。  * 网站地址: http://www.alltosun.com  * ----------------------------------------------------------------------------  * 许可声明：这是一个开源程序，未经许可不得将本软件的整体或任何部分用于商业用途及再发布。  * ============================================================================  * $Author: 王敬飞 (wangjf@alltosun.com) $  * $Date: 2016-7-6 下午4:41:58 $  * $Id$  */class monitor_widget{    /**     * 空数据报警     */    public function empty_data_monitor()    {        //当前时间        $curr_date  = date('Y-m-d H:i:s');        $monitor_empty_data_table = monitor_config::$monitor_empty_data_table;        //循环需要监控的mysql表        foreach ($monitor_empty_data_table as $k => $v) {            //监控范围开始时间            $start_date = date('Y-m-d '.$v['start_time']);            //监控范围结束时间            $stop_date  = date('Y-m-d '.$v['end_time']);            try{                if ($v['table_type'] == 'mysql') {                    //探针分库分表                    if (strpos($k, 'probe') !== false) {                        probe_helper::load('func');                        //厅                        $region_info = explode('_', $k);                        if (empty($region_info['4'])) {                            continue;                        }                        $info = get_db($region_info['4'])->read(array(1=>1), " ORDER BY `{$v['order_field']}` DESC LIMIT 1 ");                    } else {                        $info = _model($k)->read(array(1=>1), " ORDER BY `{$v['order_field']}` DESC LIMIT 1 ");                    }                } else if ($v['table_type'] == 'mongodb') {                    $info = _mongo('screen', $k)->findOne(array(), array('sort' => array($v['order_field'] => -1)));                    $info = (array)$info;                } else {                    continue;                }            } catch(Exception $e) {                continue;            }            //用来表示更新时间的字段如果为空或不存在则跳过            if (empty($info[$v['update_time_field']])) {                continue;            }            //需要在监控时间段内并且过去报警阀值后            $new_start_date = date('Y-m-d H:i:s', strtotime(date('Y-m-d '.$v['start_time'])) + $v['waraing_time_threshold']);            //不在监控的时间范围之内            if ($curr_date < $new_start_date || $curr_date > $stop_date ) {                continue;            }            //一直没有数据 或者大于阀值时间没上报数据            if (!$info || (strtotime($curr_date) - strtotime($info[$v['update_time_field']]) >= $v['waraing_time_threshold'])) {                $title = '数据库长时间未新增或者未更新数据';                if ($info) {                    $content = $v['title'].'从'.$info[$v['update_time_field']].'至'.$curr_date.'长时间未更新数据， 请检查是否异常。';                } else {                    $content =  $v['title'].'从'.$start_date.'至'.$curr_date.'长时间未更新数据， 请检查是否异常。';                }                //查询上一次报警 type 1=为空监控                $last_monitor  =_model('monitor')->read(array('monitor_table' => $k, 'monitor_type' => 1), ' ORDER BY `id` DESC LIMIT 1 ');                //第一次报警或者距离上一次报警大于1小时，则发送邮箱报警                if (!$last_monitor || (strtotime($curr_date) - strtotime($last_monitor['add_time'])) >= $v['waraing_time_interval']) {                    echo '正在发送报警邮件..<br>';                    //发送邮箱报警                    $res = monitor_helper::report_by_email($title, $content, $v['waraing_email']);                    if ($res != true) {                        p($res);                        continue;                    }                    //记录报警                    _model('monitor')->create(array('monitor_table' => $k, 'monitor_type' => 1, 'msg_content' => $content));                }            }        }    }}