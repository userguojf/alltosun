{"version":3,"file":"mcanvas.min.js","sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import _ from './utils';\n\nexport default function MCanvas(options = {}){\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))return new MCanvas(options);\n\n    // 配置canvas初始大小；\n    // width：画布宽度，Number,选填，默认为 500;\n    // height: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = _.extend({\n        width: 500,\n        height: 500,\n        backgroundColor : '',\n    }, options);\n\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n    // 绘制函数队列；\n    this.queue = [];\n    // 回调函数池；\n    this.fn = {\n        // 最后执行的函数；\n        success(){},\n        // 错误回调；\n        error(){},\n    };\n    this.data = {\n        // 文字id；\n        textId: 0,\n        // 文字绘制数据；\n        text : {},\n        // 背景图数据;\n        bgConfig : null,\n    };\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.save();\n\n    this.ops.backgroundColor && this.setBgColor(this.ops.backgroundColor);\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(image, bg = {\n    type : 'origin',\n}){\n    if(!image && !this.data.bgConfig){\n        console.error('mcanvas error : the init background must has a image.');\n        return;\n    }\n\n    // 缓存bg options， 用于重置；\n    if(!image){\n        bg = this.data.bgConfig;\n    }else{\n        bg.image = image;\n        this.data.bgConfig = bg;\n    }\n\n    this.queue.push(() => {\n        if(bg.color)this.setBgColor(bg.color);\n        _.getImage(bg.image, img =>{\n            this._background(img, bg);\n        },this.fn.error);\n    });\n    return this;\n};\n\n// 设置画布颜色;\nMCanvas.prototype.setBgColor = function(color){\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n};\n\nMCanvas.prototype._getBgAlign = function(left,iw,cw,cropScale){\n    let rv;\n    if(typeof left == 'string'){\n        if(left == '50%' || left == 'center'){\n            rv = Math.abs((iw - cw / cropScale) / 2);\n        }else if(left == '100%'){\n            rv = Math.abs(iw - cw / cropScale);\n        }else if(left == '0%'){\n            rv = 0;\n        }\n    }else if(typeof left == 'number'){\n        rv = left;\n    }else{\n        rv = 0;\n    }\n    return rv;\n};\nMCanvas.prototype._background = function(img, bg){\n    let { iw, ih } = this._getSize(img);\n    // 图片与canvas的长宽比；\n    let iRatio = iw / ih;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    let cropScale;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            if(iRatio > cRatio){\n                swidth = ih * cRatio;\n                sheight = ih;\n                cropScale = this.canvas.height / ih;\n            }else{\n                swidth = iw;\n                sheight = swidth / cRatio;\n                cropScale = this.canvas.width / iw;\n            }\n\n            sx = this._getBgAlign(bg.left,iw, this.canvas.width,cropScale);\n            sy = this._getBgAlign(bg.top,ih,this.canvas.height,cropScale);\n\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = iw;\n            sheight = ih;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = iw;\n            this.canvas.height = ih;\n            sx = sy = 0;\n            swidth = iw;\n            sheight = ih;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('mcanvas error:background type error!');\n            return;\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制矩形层；\nMCanvas.prototype.rect = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0} = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let width = this._get(cw, 0, ops.width || 0, 'pos') - 2 * strokeWidth,\n            height = this._get(ch, 0, ops.height || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, width, ops.x || 0 ,'pos') + strokeWidth / 2,\n            y = this._get(ch, height, ops.y || 0 ,'pos') + strokeWidth / 2;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.fillStyle = fillColor;\n        this.ctx.strokeStyle = strokeColor;\n\n        this.ctx.beginPath();\n        this.ctx.strokeRect(x, y, width, height);\n        this.ctx.fillRect(x, y, width, height);\n        this.ctx.closePath();\n\n        this._resetCtx()._next();\n    });\n    return this;\n};\n\n// 绘制圆形层；\nMCanvas.prototype.circle = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0 } = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let r = this._get(cw, 0, ops.r || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, 2 * r, ops.x || 0 ,'pos') + strokeWidth / 2 + r,\n            y = this._get(ch, 2 * r, ops.y || 0 ,'pos') + strokeWidth / 2 + r;\n\n        this.ctx.beginPath();\n        this.ctx.arc(x,y,r,0,Math.PI*2,false);\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fill();\n        this.ctx.strokeStyle = strokeColor;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this._resetCtx()._next();\n    });\n    return this;\n};\n\n// 重置ctx属性;\nMCanvas.prototype._resetCtx = function(){\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.restore();\n    return this;\n};\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '', ops){\n    if(!image){\n        console.error('mcanvas error : there is not image of watermark.');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20 } = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            },this.fn.error);\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    if(ops.width == 0)console.warn(`mcanvas warn: the width of mc-element is zero`);\n    let { iw, ih } = this._getSize(img);\n    // let ratio = iw / ih;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh } = ops.crop;\n\n    let cratio = lsw / lsh;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    // _ratio 为 较大边 / 较小边 的比例；\n    let _ratio = iw > ih ? iw / ih : ih / iw;\n    let lctxScale = _ratio * 1.4 > 5 ? 5 : _ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  lsw * lctxScale;\n    lcvs.height = lsh * lctxScale;\n\n    // 限制canvas的大小，ios8以下为 2096, 其余平台均限制为 4096;\n    let shrink;\n    if(_.isIos8() && (lcvs.width > 2096 || lcvs.height > 2096)){\n        if(cratio > 1){\n            shrink = 2096 / lcvs.width;\n        }else{\n            shrink = 2096 / lcvs.height;\n        }\n    }else if(lcvs.width > 4096 || lcvs.height > 4096){\n        if(cratio > 1){\n            shrink = 4096 / lcvs.width;\n        }else{\n            shrink = 4096 / lcvs.height;\n        }\n    }\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = - Math.round(lsw / 2);\n    ldy = - Math.round(lsh / 2);\n    ldw = lsw;\n    ldh = Math.round(lsw / cratio);\n\n    // 获取素材最终的宽高;\n    if(shrink){\n        [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh] = [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh].map(v => Math.round(v*shrink));\n    }\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n    \n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n\n    // lcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    cdw = ops.width * lctxScale;\n    cdh = cdw / cratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / cratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n\n// 获取宽高，兼容img，canvas\nMCanvas.prototype._getSize = function(img){\n    let iw, ih;\n    if(img.tagName === 'IMG'){\n        iw = img.naturalWidth;\n        ih = img.naturalHeight;\n    }else if(img.tagName === 'CANVAS'){\n        iw = img.width;\n        ih = img.height;\n    }else{\n        iw = img.offsetWidth;\n        ih = img.offsetHeight;\n    }\n    return { iw, ih };\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height;\n    let { iw, ih } = this._getSize(img);\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {};\n    crop.width = this._get(cw,iw,cropw,'crop');\n    crop.height = this._get(ch,ih,croph,'crop');\n    crop.x = this._get(iw,crop.width,cropx,'crop');\n    crop.y = this._get(ih,crop.height,cropy,'crop');\n\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = iw - crop.x;\n    maxLsh = ih - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let defaultStyle = {\n            color:'#000',\n            type : 'fill',   // strokeText or fillText,\n            lineWidth : 1,\n            shadow:{\n                color: null,\n                blur: 0,\n                offsetX: 0,\n                offsetY: 0,\n            },\n        };\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                lineHeight:size * 0.9,\n                ..._.deepCopy(defaultStyle),\n            },\n            normalStyle:{\n                font : `${size}px ${fontFamily}`,\n                lineHeight:size*1.1,\n                type : 'fill',   // strokeText or fillText,\n                ..._.deepCopy(defaultStyle),\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                lineHeight:size * 1.4,\n                ..._.deepCopy(defaultStyle),\n            },\n            pos:{\n                x:0,\n                y:0,\n                rotate: 0,\n            },\n        };\n\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        let parseContext = this._parse(context);\n        let max = 0, maxFont;\n        parseContext.map(v => {\n            if (v.size > max) {\n                max = v.size;\n                maxFont = v.type;\n            }\n        });\n        // 当设置的宽度小于字体宽度时，强行将设置宽度设为与字体一致；\n        let maxFontSize = parseInt(option[`${maxFont}Style`].font);\n        if (maxFontSize && option.width < maxFontSize) option.width = maxFontSize;\n\n        this._text(parseContext, option);\n        this._resetCtx()._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i= 0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type,\n                text:tmp[0],\n                // 用于字体的大小比较；\n                size: type == 'small' ? 0 : 2,\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n                size: 1,\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n            size: 1,\n        });\n    }\n    return result;\n};\n\nMCanvas.prototype._text = function(textArr,option){\n\n    this.data.textId++;\n    this.data.text[this.data.textId] = {};\n\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style, line = 1, length = 0,\n        lineHeight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,0 ,'pos'),\n        y = (this._get(this.canvas.height,0 ,0 ,'pos')) + lineHeight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.data.text[this.data.textId][line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i = 0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width, 0, 'pos');\n                    y += lineHeight;\n                    line += 1;\n                    this.data.text[this.data.textId][line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.data.text[this.data.textId][line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.data.text[this.data.textId][line]['lineWidth'] = length;\n            }\n        }else{\n            this.data.text[this.data.textId][line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.data.text[this.data.textId][line]['lineWidth'] = length;\n        }\n    });\n\n    // 创建文字画布；\n    const tcvs = document.createElement('canvas');\n    const tctx = tcvs.getContext('2d');\n    const tdx = this._get(this.canvas.width,option.width,option.pos.x ,'pos'), \n          tdy = this._get(this.canvas.height,0 ,option.pos.y ,'pos');\n    let tdw, tdh;\n    tdw = tcvs.width = option.width;\n    tdh = tcvs.height = this._getTextRectHeight(line);\n        \n    // 通过字体数据进行文字的绘制；\n    _.forin(this.data.text[this.data.textId],(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(tctx, text);\n        });\n    });\n\n    // tcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(tcvs);\n    \n    // 绘制文字画布；\n    const originX = tdx + tdw/2,\n          originY = tdy + tdh/2;\n    this.ctx.translate(originX, originY);\n    this.ctx.rotate(parseFloat(option.pos.rotate) * Math.PI / 180);\n    this.ctx.drawImage(tcvs,-tdw/2, -tdh/2, tdw, tdh);\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineHeight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\n\nMCanvas.prototype._fillText = function(ctx, text){\n    let {context, x, y, style} = text;\n    let {align, lineWidth, shadow} = style;\n    let {color, blur, offsetX, offsetY} = shadow;\n    ctx.font = style.font;\n    ctx.textAlign = align;\n    ctx.textBaseline = 'alphabetic';\n    ctx.lineWidth = lineWidth;\n    ctx.shadowColor = color;\n    ctx.shadowBlur = blur;\n    ctx.shadowOffsetX = offsetX;\n    ctx.shadowOffsetY = offsetY;\n\n    if(style.gradient){\n        let { type, colorStop } = style.gradient;\n        let x1, y1, x2, y2;\n        if(type == 1){\n            x1 = x; y1 = y;\n            x2 = x + text.width; y2 = y ;\n        }else{\n            x1 = x; y1 = y - style.lineHeight;\n            x2 = x; y2 = y;\n        }\n        let grad  = ctx.createLinearGradient(x1,y1,x2,y2);\n        let colorNum = colorStop.length || 0;\n        _.forin(colorStop, (i, v)=>{\n            grad.addColorStop(1/colorNum*(+i+1),v);\n        });\n        ctx[`${style.type}Style`] = grad;\n    }else{\n        ctx[`${style.type}Style`] = style.color;\n    }\n\n    ctx[`${style.type}Text`](context,x,y);\n    this._resetCtx();\n};\n\nMCanvas.prototype._getTextRectHeight = function (lastLine) {\n    const lastLineData = this.data.text[this.data.textId][lastLine].data[0];\n    return lastLineData.y + lastLineData.style.lineHeight;\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        } else if (str == 'center'){\n            result = (par-child)/2;\n        } else if (str == 'origin') {\n            result = child;\n        } else {\n            result = +str;\n        }\n    }\n    return Math.round(result);\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(ops){\n    let _ops = {\n        type:'jpg',\n        quality:.9,\n        success(){},\n        error(){},\n    }, b64;\n    if(typeof ops == 'function'){\n        _ops.success = ops;\n    }else{\n        _ops = _.extend(_ops,ops);\n        if(_ops.type == 'jpg')_ops.type = 'jpeg';\n    }\n    this.fn.error = _ops.error;\n    this.fn.success = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL(`image/${_ops.type}`, _ops.quality);\n            _ops.success(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\n\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.fn.success();\n    }\n};\n\nMCanvas.prototype.clear = function(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    return this;\n};\n","export default {\n    extend(obj1, obj2) {\n        let type = this.isType(obj2);\n        if(type == 'object'){\n            this.forin(obj2, (k,v) => {\n                let vType = this.isType(v);\n                if (vType !== 'object' && vType !== 'array') {\n                    obj1[k] = v;\n                } else {\n                    if (this.isType(obj1[k]) !== vType || obj1[k] === null) {\n                        obj1[k] = vType == 'object' ? {} : [];\n                    }\n                    this.extend(obj1[k], v);\n                }\n            });\n        }else if(type == 'array'){\n            for (let i = 0; i < obj2.length; i++) {\n                obj1[i] = obj2[i];\n            }\n        }else{\n            obj1 = obj2;\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n            setTimeout(()=>{\n                img = null;\n            },1000);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isObject(tar){\n        return this.isObjFunc(tar, 'Object');\n    },\n    isBoolean(tar){\n        return this.isObjFunc(tar, 'Boolean');\n    },\n    isArr(tar){\n        return this.isObjFunc(tar, 'Array');\n    },\n    getImage(image,cbk, error){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },error);\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n    isIos8(){\n        let UA = window.navigator.userAgent.toLowerCase();\n        let IOS = /(iPhone|iPad|iPod|iOS)/gi.test(UA);\n        let IPAD = /(iPad)/gi.test(UA);\n        if(IOS){\n            return IPAD ? UA.match(/cpu os (\\d*)/)[1] < 9 : UA.match(/iphone os (\\d*)/)[1] < 9;\n        }else{\n            return false;\n        }\n    },\n    deepCopy(obj){\n        return JSON.parse(JSON.stringify(obj));\n    },\n    isObjFunc(tar, name) {\n        return Object.prototype.toString.call(tar) === '[object ' + name + ']';\n    },\n    isType(tar){\n        return Object.prototype.toString.call(tar).split(' ')[1].replace(']','').toLowerCase();\n    },\n};\n"],"names":["MCanvas","options","this","ops","_","extend","canvas","ctx","queue","fn","data","_init","obj1","obj2","type","isType","forin","k","v","vType","_this","i","length","image","loaded","error","img","Image","indexOf","crossOrigin","onload","onerror","src","tar","isObjFunc","cbk","loadImage","log","obj","hasOwnProperty","UA","window","navigator","userAgent","toLowerCase","IOS","test","IPAD","match","JSON","parse","stringify","name","Object","prototype","toString","call","split","replace","document","createElement","width","height","getContext","save","backgroundColor","setBgColor","background","bg","bgConfig","push","color","getImage","_background","fillStyle","fillRect","_getBgAlign","left","iw","cw","cropScale","rv","Math","abs","_getSize","ih","iRatio","cRatio","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","top","drawImage","_next","rect","fillColor","strokeColor","strokeWidth","_this2","ch","_get","x","y","lineWidth","strokeStyle","beginPath","strokeRect","closePath","_resetCtx","circle","_this3","r","arc","PI","fill","stroke","setTransform","restore","watermark","pos","margin","position","add","def","isArr","forEach","_add","_this4","_handleOps","console","warn","cdx","cdy","cdw","cdh","crop","lsx","lsy","lsw","lsh","cratio","ldx","ldy","ldw","ldh","lcvs","lctx","_ratio","lctxScale","spaceX","spaceY","shrink","isIos8","round","map","translate","rotate","scale","tagName","naturalWidth","naturalHeight","offsetWidth","offsetHeight","ratio","maxLsw","maxLsh","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","text","context","fontFamily","size","defaultStyle","option","deepCopy","parseContext","_this5","_parse","max","maxFont","maxFontSize","parseInt","font","_text","arr","result","value","splitTag","tmp","textArr","textId","style","line","lineHeight","lh","vlh","_this6","measureText","fontLength","tcvs","tctx","tdx","tdy","tdw","tdh","_getTextRectHeight","align","_fillText","originX","originY","shadow","blur","offsetX","offsetY","textAlign","textBaseline","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","gradient","colorStop","x1","y1","x2","y2","grad","createLinearGradient","colorNum","addColorStop","lastLine","lastLineData","par","child","str","draw","_ops","b64","success","_this7","toDataURL","quality","shift","clear","clearRect"],"mappings":"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"}